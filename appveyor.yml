version: 3.0.{build}
skip_tags: true
image: Visual Studio 2022
configuration: Release

environment:
 SONAR_TOKEN: 
  secure: ve2nGKxIC9PB2BCgCyvPduxTjXDnzrk+YBJyw49LoRCADgQ0MrKIqM4b5daFxqAC
 GITHUB_TOKEN:
  secure: AD1z81FqZlvGkCEyDzJ3g6sIJ93ecUE9EuqfUxc4CMiFGW139pWZk+/huuTY5jzG
 CODACY_PROJECT_TOKEN:
  secure: rI95hpNbtpydyhYHYyp+2/bKjTZO99rZSDUOL36R4wsGvvX52FN98XGHVhslYI6R
 CODECLIMATE_TOKEN:
  secure: 4cgJ/Uzegx3b8kOg1f1Ql1JX3Y6C1Z+HA2DMPT7XMOlzm2kG9Syb61hfdicSg4DGAK254LyT1bWxCtQ/7wkP6cxnAd/wsp7vHa2acFo6m60=

dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'

init:
- SET JAVA_HOME=C:\Program Files\Java\jdk19
- SET PATH=%JAVA_HOME%\bin;%PATH%

before_build:
- ps: $env:SOLUTION_NAME = $([io.path]::GetFileNameWithoutExtension($(Get-ChildItem -Path .\* -Include *.sln)))
- ps: $env:SONAR_PROJECT = "$env:APPVEYOR_REPO_NAME" -replace "/","_"
- ps: $env:SONAR_ORGANIZATION = "$env:APPVEYOR_REPO_NAME" -replace "/.*$","-github"
- cmd: nuget restore
- cmd: choco install opencover.portable
- cmd: choco install codecov
- cmd: curl -L https://github.com/codacy/codacy-coverage-reporter/releases/latest/download/codacy-coverage-reporter-assembly.jar > ./codacy-test-reporter.jar
- cmd: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-windows-amd64 > codeclimate-test-reporter.exe
- cmd: dotnet tool install --global dotnet-sonarscanner

build:
  publish_nuget: true
  include_nuget_references: true
  parallel: true
  verbosity: normal

build_script:
- ps: $Params =  "/k:`"$env:SONAR_PROJECT`"", "/o:`"$env:SONAR_ORGANIZATION`"", "/v:`"$env:APPVEYOR_BUILD_NUMBER`""
- ps: $Params += "/d:sonar.host.url=`"https://sonarcloud.io`"", "/d:sonar.login=`"$env:SONAR_TOKEN`""
- ps: $Params += "/d:sonar.exclusions=`"**/bin/**/*,**/obj/**/*`"", "/d:sonar.coverage.exclusions=`"**/$env:SOLUTION_NAME.UnitTests/**,**/*Tests.cs`""
- ps: $Params += "/d:sonar.cs.opencover.reportsPaths=`"$env:CD\Tests\$env:SOLUTION_NAME.UnitTests\coverage.opencover.xml`""
- ps: if(-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { $Params += "/d:sonar.branch.name=`"$env:APPVEYOR_REPO_BRANCH`"" }
- ps: if($env:APPVEYOR_PULL_REQUEST_NUMBER) { $Params += "/d:sonar.pullrequest.key=$env:APPVEYOR_PULL_REQUEST_NUMBER" }
- ps: Start-process "dotnet" "sonarscanner begin $($Params -join ' ')"
- codeclimate-test-reporter before-build
- dotnet build %SOLUTION_NAME%.sln
- ps: $testProjects = (Get-ChildItem -Path .\Tests\**\ -Recurse -Include *.csproj).Fullname
- ps: $coverletFormats = @('cobertura', 'lcov', 'opencover')
- ps: |
    foreach($testProject in $testProjects)
    {
        foreach($coverletFormat in $coverletFormats)
        {
           dotnet test $testProject /p:CollectCoverage=true /p:CoverletOutputFormat="$coverletFormat"
        }
    }
- codeclimate-test-reporter format-coverage -t lcov -o "%CD%\Tests\%SOLUTION_NAME%.UnitTests\code-climate.json" "%CD%\Tests\%SOLUTION_NAME%.UnitTests\coverage.info"
- codeclimate-test-reporter upload-coverage -i "%CD%\Tests\%SOLUTION_NAME%.UnitTests\code-climate.json" -r %CODECLIMATE_TOKEN%
- codecov -f "%CD%\Tests\%SOLUTION_NAME%.UnitTests\coverage.opencover.xml"
- java -jar ./codacy-test-reporter.jar report -l CSharp -t %CODACY_PROJECT_TOKEN% -r "%CD%\Tests\%SOLUTION_NAME%.UnitTests\coverage.opencover.xml"
- dotnet sonarscanner end /d:sonar.login="%SONAR_TOKEN%"

after_build:
- xcopy %CD%\Src\%SOLUTION_NAME%\bin\Release\netstandard2.0\*.* %CD%\Build\.netstandard2.0\
- xcopy %CD%\Src\%SOLUTION_NAME%\bin\Release\netstandard2.1\*.* %CD%\Build\.netstandard2.1\

- copy %CD%\Src\%SOLUTION_NAME%\bin\Release\%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.nupkg %SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.nupkg

- rd /s /q %CD%\Src\%SOLUTION_NAME%\bin\Release\

- xcopy %CD%\Tests\%SOLUTION_NAME%.UnitTests\*.xml %CD%\Coverage\
- xcopy %CD%\Tests\%SOLUTION_NAME%.UnitTests\*.json %CD%\Coverage\
- xcopy %CD%\Tests\%SOLUTION_NAME%.UnitTests\*.info %CD%\Coverage\

- cd %CD%

- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.zip" Build
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.Coverage.zip" Coverage

artifacts:
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.zip
  name: ZipFile

- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.nupkg
  name: Package

- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.Coverage.zip
  name: Coverage

deploy:
- provider: Environment
  name: NuGet
  on:
   branch: main
  artifact: Package

- provider: GitHub
  on:
   branch: main
  tag: $(appveyor_build_version)
  auth_token: $(GITHUB_TOKEN)
  force_update: true
  artifact: ZipFile, Coverage
